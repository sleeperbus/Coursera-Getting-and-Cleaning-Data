library(plyr)
library(reshape2)
################################################################################
# load information files to dataframes
################################################################################
setwd("~/Downloads/UCI HAR Dataset/")
features <- read.table("features.txt", stringsAsFactors=FALSE)
names(features) <- c("id", "feature")
activities <- read.table("activity_labels.txt", stringsAsFactors=FALSE)
names(activities) <- c("id", "activity")
################################################################################
# loading data from train files and make single dataframe
################################################################################
setwd("~/Downloads/UCI HAR Dataset/train")
train.set <- read.table("X_train.txt", stringsAsFactors=FALSE)
train.subject <- read.table("subject_train.txt", stringsAsFactors=FALSE)
train.subject <- cbind(1, train.subject)
names(train.subject) <- c("group", "subject")
train.activity <- read.table("y_train.txt", stringsAsFactors=FALSE)
names(train.activity) <- c("activity")
# add extra columns to train
train <- cbind(train.subject, train.activity, train.set)
################################################################################
# loading data from test files and make single dataframe
################################################################################
setwd("~/Downloads/UCI HAR Dataset/test")
test.set <- read.table("X_test.txt", stringsAsFactors=FALSE)
test.subject <- read.table("subject_test.txt", stringsAsFactors=FALSE)
test.subject <- cbind(2, test.subject)
names(test.subject) <- c("group", "subject")
test.activity <- read.table("y_test.txt", stringsAsFactors=FALSE)
names(test.activity) <- c("activity")
# add extra columns to training
test<- cbind(test.subject, test.activity, test.set)
# finally, make one dataframe
data <- rbind(test, train)
activity.id.to.strings <- function(x) {
with(activities, activities[id == x, "activity"])
}
# change activity id to readable code.
data$activity <- sapply(data$activity, activity.id.to.strings)
# extract mean(), std() columns from data
mean.cols <- paste("V", grep("mean()", features$feature), sep="")
std.cols <- paste("V", grep("std()", features$feature), sep="")
tidy.data <- data[,c("subject", "activity",  mean.cols, std.cols)]
# rename columns of tiny data
names(tidy.data) <- c("person", "motion", mean.cols, std.cols)
#
tidy.data.melted <- melt(tidy.data, id=c("person", "motion"))
tidy.data.mean <- dcast(tidy.data.melted, person + motion ~ variable, mean)
write.csv(tidy.data.mean, "~/Downloads/UCI HAR Dataset/tidy.csv")
?setwd
setwd("/Users/sleeperbus/Dev/github/Coursera-Getting-and-Cleaning-Data")
setwd(~/test)
setwd("~/test")
setwd("~/Dev/github/Coursera-Getting-and-Cleaning-Data")
setwd("~/Dev/github/Coursera-Getting-and-Cleaning-Data/test")
?cd
library(plyr)
library(reshape2)
################################################################################
# load information files to dataframes
################################################################################
setwd("~/Dev/github/Coursera-Getting-and-Cleaning-Data")
features <- read.table("features.txt", stringsAsFactors=FALSE)
names(features) <- c("id", "feature")
activities <- read.table("activity_labels.txt", stringsAsFactors=FALSE)
names(activities) <- c("id", "activity")
################################################################################
# loading data from train files and make single dataframe
################################################################################
setwd("~/Dev/github/Coursera-Getting-and-Cleaning-Data/train")
train.set <- read.table("X_train.txt", stringsAsFactors=FALSE)
train.subject <- read.table("subject_train.txt", stringsAsFactors=FALSE)
train.subject <- cbind(1, train.subject)
names(train.subject) <- c("group", "subject")
train.activity <- read.table("y_train.txt", stringsAsFactors=FALSE)
names(train.activity) <- c("activity")
# add extra columns to train
train <- cbind(train.subject, train.activity, train.set)
################################################################################
# loading data from test files and make single dataframe
################################################################################
setwd("~/Dev/github/Coursera-Getting-and-Cleaning-Data/test")
test.set <- read.table("X_test.txt", stringsAsFactors=FALSE)
test.subject <- read.table("subject_test.txt", stringsAsFactors=FALSE)
test.subject <- cbind(2, test.subject)
names(test.subject) <- c("group", "subject")
test.activity <- read.table("y_test.txt", stringsAsFactors=FALSE)
names(test.activity) <- c("activity")
# add extra columns to training
test<- cbind(test.subject, test.activity, test.set)
# finally, make one dataframe
data <- rbind(test, train)
activity.id.to.strings <- function(x) {
with(activities, activities[id == x, "activity"])
}
# change activity id to readable code.
data$activity <- sapply(data$activity, activity.id.to.strings)
# extract mean(), std() columns from data
mean.cols <- paste("V", grep("mean()", features$feature), sep="")
std.cols <- paste("V", grep("std()", features$feature), sep="")
tidy.data <- data[,c("subject", "activity",  mean.cols, std.cols)]
# rename columns of tiny data
names(tidy.data) <- c("person", "motion", mean.cols, std.cols)
# finally, make csv file
tidy.data.melted <- melt(tidy.data, id=c("person", "motion"))
tidy.data.mean <- dcast(tidy.data.melted, person + motion ~ variable, mean)
write.csv(tidy.data.mean, "~/Dev/github/Coursera-Getting-and-Cleaning-Data/tidy.csv")
